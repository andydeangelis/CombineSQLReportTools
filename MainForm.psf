<File version="3.1">
  <FileID>0a8f06d0-194c-40b1-99f0-92c11e20314a</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAGzUSURBVHhe7d11nFT3gib8u/uZ3f3j/ezuzLwz
+96ZO7Yzd2bujQNRQuxGSIhAAoFAkADB3V0ad9egLbS7u7u7S3W5tHejCXne3+9UNTRQSfBL5zzf
fJ4P3VWnjlV1/Z5zSvIbIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiKiX60yEfN/+2//zfy3f/u35jFjxpjHjx9vnjBh
osgEhmEYhmGe2NjH6oki//APvzP/xV/8hVmO6SINcoD/Wf/lv/yX9r/+67/G0A8+wKzZc+DpG4SS
Sg1qmyyoaTQxDMMwDPPExoyaBgPSMnOwcvVqfPjhhxAH8/iv//W/XnMM8z9NFADz0KFDsX3HbmSX
1CGlqAGpxU1IK2lCKsMwDMMwT2x6x+qU4kaU1hlw5OgJfPzxx/iLv/iLbscw/9Pkaf/pM2YhRwz+
qSUaJIsCkFRYzzAMwzD3neTiBqSVigGqVOP491HFPv/bxy45IN4+WD6qyGX1XbZcl77r9uhy67Yn
FzWivN6ENWvW4e/+7u9+uQCM/vJLs+sFP/tGiJkky5kwDMMwzH0mTQyIMZmV8I7IxoXQTHiGPbrI
+ftE5SA+pxqpYrkpch3EWBaeWoSA2KzHkgixrN7xU65DnFgXn8icx7Lt3pHZiM2qVJZrX74oBpkF
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
ASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJS
IRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIi
IhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEg
IiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEW
ACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIV
YgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIi
UiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAi
IiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIB
ICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIh
FgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIi
FWIBICIiUiEWACIiIhViASAiIlIhFgAiIiIVYgEgIiJSIRYAIiIiFWIBICIiUiEWACIiIhVSfQG4
fv06WltbYbFYGOZGenp6HI8QIqJfJ9UXgEuXLiE4OBhRUVGIiYlhVJ7Y2FgEBgYiNzfX8QghIvp1
Un0BkEd60dHRynL0ej10Oh2j4pjNZuTl5bEAENGvHguAowA0NTVBq9Uqy2PUG/kHIQd/FgAi+rVj
AbjXAqBphlZnQkt3N7r7pqMNVoMWTeJ6p7d7XJHrpzej1cm6aR7aumnQrBVHyy03l9HZ1gKjTgON
0+mboTNa0dFiEvtYB6PZhnarUVlXZ9P+fDRo0hrRIh4bNpNezEOsi9Pp7i8sAESkFiwA91QAtGIg
06K+PBqHJo/DyBEjMHz4CIwQ/474djWOJ1ShVQ5KTm97/9GI5RpMZlgtBmh/dtDUQm/SoiY/BLvG
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
qZvjUV0VjOXjhthvN2INvLOqYXC8CdBo0aIy3RULXxx0c/0+mYldMdXotFlgshXAdfpovDXIft1L
Q97FvvgqVGScx8wX38LYxWcQGrAb4wcNst920IuYvO0CCpraYNLb94POaBYlIB9nl71sn0bkQzFg
h5S2ivusFZrU05j2+Sv26xadRmFNIyrC9uHz1Z4oqy1E0Kkt+Frsg0axD+SbAFd/85Z92k+W4Xxa
FawtFuR5LMM7r4jLXnwbIw8lwtquRb7/Nowa9BEWL9uGhXv2YLO3/U2A1WHbMOJPcj1exDtbQqFr
rECs2zaM3hSE+tYuVMYcxJEDKxBS0q6UmDvv15thASAitWABuKcC4IhWLwZas/K98XLn9cYoYhax
f/RPfnGNuEx+pE/MV28U15nFdDLys/ZiPsrHAB23lR9Zu/ERODHAKvM2y4+wicFWa3+N3SSWKecn
341vMolpHLdTltdn/ZT5yvW7MW+xHjc+BmdfL/u6iGks8mOFWuU29vnroRdH+fI65bbiepNRfmzx
1m/ck9MbxLr1brvpxvo71lWsn3J7o8H+vQLys/zKfMT2GYziZ53jWxXlPrh9W+zTKPN17C/lY5Py
o30WsX/lg1bM16i3L0+elbAvT8xHXC73t7xMLk9+U6Bctvw4oE77y98ayAJARGrBAnA/BUBETvtT
uXUax21umcb5fHovu3Xa3st7f/+Z2/VJ3+uV9L3+J66z/y5/vu36Put7S26Zpu96OLtc/tz3dr3T
/tS23Lzs5rR9LxP5xWlvvd7+88+HBYCI1IIF4D4LAPPrDAsAEakFCwALANMnLABEpBYsAI4CIAd/
uTP0evkaOKPWWCwW5OfnswAQ0a+e6gvApUuXEBQUpJSAuLg4xMbGMipOfHw8AgMDkZOT43iEEBH9
Oqm+AFy/fl056nN2NMioN/LxR0T0a6b6AkBERKRGLABEREQqxAJARESkQiwAREREKsQCQEREpEIs
AERERCrEAkBERKRCLABEREQqxAJARESkQiwAREREKsQCQEREpEIsAERERCrEAkBERKRCLABEREQq
xAJARESkQiwAREREKsQCQEREpEIsAERERCrEAkBERKRCLABEREQqxAJARESkQiwAREREKvTEFwCt
VutYVSIiInpYjEbjk1sAWlpaUFdXp6wkwzAMwzAPL3J8NZvNT14BkGlvb1dWztmKMwzDMAxz/5FH
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
jNwXzvZRb7ivbubn9lV7ewcu93Ti+mWmN3Lwb3eyr5zlsRYAhmEYhmGejLAAMAzDMIwKwwLAMAzD
MCoMCwDDMAzDqDAsAAzDMAyjwrAAMAzDMIwKwwLAMAzDMCoMCwDDMAzDqDAsAAzDMAyjwjxQAZA3
ZhiGYRim/6Wr6z4KgM7cjkbbFeWGDMMwDMP0v2hE6i2XYG69dHcF4Ouvv27ViwJgabuitAaGYRiG
Yfpn5OBvbbuIqVO/veIY5n/aZ5991vDttOnd00RkY2AYhmEYpn9m2jSR6TO6hw8fbnYM80RERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERL8qv/nN/w+LyVAIPlN5hQAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabpageStep1)
	{
		#TODO: Enter Validation Code here for Step 1
		if ($textboxServerFileName.Text -and $textboxReportPath.Text)
		{
			return $true
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabpageStep2)
	{
		#TODO: Enter Validation Code here for Step 2
		if ($textboxDomainAccount.Text -and $textboxSQLAccount.Text)
		{
			$buttonExecute1.Enabled = $true
			return $true
		}		
		
		return $false
		
	}
	
	#Add more pages here
	
	return $false
}



$buttonFinish_Click = {
	#TODO: Place custom script here
		
}

#region Events and Functions
$formCombinedSQLReporting_Load={
	Update-NavButtons
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	
	Update-NavButtons
}

$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxServerFileName_TextChanged={
	Update-NavButtons
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonFileBrowse_Click={
	
	# Open file dialog box for list of servers.
	
	$openfiledialog1.ShowDialog()
	$textboxServerFileName.Text = $openfiledialog1.FileName
	
	# Add the content of the servers file to the datagrid for Step 2.
	
	$servers = Get-Content ($openfiledialog1.FileName) | % {
		New-Object PSObject -Property @{
			"Server Name"  = $_
		}
	}
	
	$array = New-Object System.Collections.ArrayList
	$array.AddRange($servers)
	
	$datagridview2.DataSource = $array
}

#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)	
}

function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param( 
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[System.Windows.Forms.ListView]$ListView,
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	$Items,
	[int]$ImageIndex = -1,
	[string[]]$SubItems,
	$Group,
	[switch]$Clear)
	
	if($Clear)
	{
		$ListView.Items.Clear();
    }
    
    $lvGroup = $null
    if ($Group -is [System.Windows.Forms.ListViewGroup])
    {
        $lvGroup = $Group
    }
    elseif ($Group -is [string])
    {
        #$lvGroup = $ListView.Group[$Group] # Case sensitive
        foreach ($groupItem in $ListView.Groups)
        {
            if ($groupItem.Name -eq $Group)
            {
                $lvGroup = $groupItem
                break
            }
        }
        
        if ($null -eq $lvGroup)
        {
            $lvGroup = $ListView.Groups.Add($Group, $Group)
        }
    }
    
	if($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{		
			$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if($null -ne $SubItems)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($null -ne $lvGroup)
			{
				$listitem.Group = $lvGroup
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if($null -ne $SubItems)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if($null -ne $lvGroup)
		{
			$listitem.Group = $lvGroup
		}
	}
}

#endregion

$datagridview1_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	
}

$buttonSetDomainAccount_Click={
	
	$message = "The domain account you specify must be a member of the local Administrators group on each server."
	
	$global:domainCredButton = Get-Credential -Message $message
	$textboxDomainAccount.Text = $global:domainCredButton.UserName
	
	Update-NavButtons
}

$textboxDomainAccount_TextChanged={
	#TODO: Place custom script here
	
}

$buttonSetSQLAccount_Click={
	
	$sqlMessage = "Please specify your SQL username and password."
	
	$global:sqlCredButton = Get-Credential -Message $sqlMessage
	$textboxSQLAccount.Text = $global:sqlCredButton.UserName	
	
	Update-NavButtons
}

$textboxSQLAccount_TextChanged={
	#TODO: Place custom script here
	
}

$tabcontrolWizard_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$labelReportOutputPath_Click={
	#TODO: Place custom script here
	
}

$buttonReportPath_Click={
	
	# Open folder dialog box for list of servers.
	
	$folderbrowsermoderndialog1.ShowDialog()
	$textboxReportPath.Text = $folderbrowsermoderndialog1.SelectedPath
	
}

$textboxReportPath_TextChanged={
	
	Update-NavButtons
	
}

$datagridview2_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	
}
$buttonExecute1_Click={
	
	# $servers = Get-Content $textboxServerFileName.ToString()
	$scriptFile = "$PSScriptRoot\CombineSQLReportTools\PS_SQL_DB_Info.ps1"
	
	# Export the SQL credentials to a temporary DPAPI XML file.
	
	$sqlCredXMLFile = "$PSScriptRoot\sqlcred.xml"
	$global:sqlCredButton | Export-Clixml -Path $sqlCredXMLFile
	
	# Export the Domain credentials to a temporary DPAPI XML file.
	
	$domainCredXMLFile = "$PSScriptRoot\domaincred.xml"
	$global:domainCredButton | Export-Clixml -Path $domainCredXMLFile
	
	$argumentList = "-executionpolicy bypass", "-mta", "-noninteractive", "-windowstyle normal", "-nologo", "-file $scriptFile", $textboxServerFileName.Text, $textboxReportPath.Text, $sqlCredXMLFile, $domainCredXMLFile
	# $argumentList = $textboxServerFileName.Text, $textboxReportPath.Text, $sqlCredXMLFile
	
	# Invoke-Command -FilePath $scriptFile -ArgumentList $argumentList
	Start-Process powershell -WorkingDirectory $PSScriptRoot -ArgumentList $argumentList -NoNewWindow
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>